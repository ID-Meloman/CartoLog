# Generated by Django 5.1.2 on 2024-10-31 20:41

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdditionalOptions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tow_bar', models.BooleanField(verbose_name='Фаркоп')),
                ('adaptive_suspension', models.BooleanField(verbose_name='Пневмоподвеска')),
                ('remote_start', models.BooleanField(verbose_name='Дистанционный запуск')),
                ('parking_assistance', models.BooleanField(verbose_name='Помощь при парковке')),
            ],
            options={
                'verbose_name': 'Дополнительные опции',
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Марка автомобиля')),
            ],
            options={
                'verbose_name': 'Марка',
                'verbose_name_plural': 'Марки',
            },
        ),
        migrations.CreateModel(
            name='Comfort',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название уровня комфорта')),
                ('climate_control', models.BooleanField(verbose_name='Климат-контроль')),
                ('seat_material', models.CharField(max_length=50, verbose_name='Материал сидений')),
                ('seat_heating', models.BooleanField(verbose_name='Подогрев сидений')),
                ('seat_ventilation', models.BooleanField(verbose_name='Вентиляция сидений')),
                ('panoramic_roof', models.BooleanField(verbose_name='Панорамная крыша')),
                ('electric_adjustments_seat', models.BooleanField(verbose_name='Электрическая регулировка сидений')),
            ],
            options={
                'verbose_name': 'Комфорт',
            },
        ),
        migrations.CreateModel(
            name='Dealer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Наименование организации')),
                ('legal_address', models.CharField(max_length=50, verbose_name='Юридический адрес')),
                ('contact', models.CharField(max_length=15, verbose_name='Контакт автодиллера')),
            ],
            options={
                'verbose_name': 'Диллер',
                'verbose_name_plural': 'Диллеры',
            },
        ),
        migrations.CreateModel(
            name='MultimediaConnectivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название мультимедиа')),
                ('infotainment_system', models.BooleanField(verbose_name='Мультимедиа')),
                ('screen_size', models.DecimalField(decimal_places=1, max_digits=3, verbose_name='Размер экрана')),
                ('navigation_system', models.BooleanField(verbose_name='Навигатор')),
                ('speakers_count', models.CharField(max_length=50, verbose_name='Поддерживаемые языки')),
                ('wireless_communication', models.BooleanField(verbose_name='Беспроводная связь')),
                ('usb_ports', models.IntegerField(verbose_name='USB порты')),
            ],
            options={
                'verbose_name': 'Мультимедиа',
            },
        ),
        migrations.CreateModel(
            name='SafetyFeatures',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('airbags_count', models.IntegerField(verbose_name='Количество подушек')),
                ('abs', models.BooleanField(verbose_name='Антиблокировочная система (ABS)')),
                ('traction_control', models.BooleanField(verbose_name='Контроль тяги')),
                ('lane_assist', models.BooleanField(verbose_name='Помощь в удержании полосы движения')),
                ('blind_spot_monitoring', models.BooleanField(verbose_name='Мониторинг слепых зон')),
                ('adaptive_cruise_control', models.BooleanField(verbose_name='Адаптивный круиз-контроль')),
            ],
            options={
                'verbose_name': 'Безопасность',
            },
        ),
        migrations.CreateModel(
            name='SuspensionBrakes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suspension_type', models.CharField(max_length=255, verbose_name='Тип подвески')),
                ('brake_type', models.CharField(max_length=255, verbose_name='Тип тормозов')),
            ],
            options={
                'verbose_name': 'Подвеска и тормаза',
            },
        ),
        migrations.CreateModel(
            name='TechnicalSpecs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Наименование характеристик')),
                ('engine_type', models.CharField(max_length=20, verbose_name='Тип двигателя')),
                ('engine_capacity', models.DecimalField(decimal_places=2, max_digits=4, verbose_name='Объем двигателя')),
                ('horsepower', models.IntegerField(verbose_name='Лошадиные силы')),
                ('torque', models.IntegerField(verbose_name='Крутящий моемент')),
                ('fuel_consumption_city', models.DecimalField(decimal_places=2, max_digits=4, verbose_name='Расход по городу')),
                ('fuel_consumption_highway', models.DecimalField(decimal_places=2, max_digits=4, verbose_name='Расход по трассе')),
                ('emissions_class', models.CharField(max_length=50, verbose_name='Экологический класс')),
            ],
            options={
                'verbose_name': 'Двигатель',
            },
        ),
        migrations.CreateModel(
            name='TransmissionDrive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transmission', models.CharField(max_length=20, verbose_name='Коробка передач')),
                ('gears_count', models.IntegerField(verbose_name='Количество передач')),
                ('drive_type', models.CharField(max_length=20, verbose_name='Привод')),
            ],
            options={
                'verbose_name': 'Трансмиссия и привод',
            },
        ),
        migrations.CreateModel(
            name='CarModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Модель автомобиля')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.brand', verbose_name='Марка автомобиля')),
            ],
            options={
                'verbose_name': 'Модель',
                'verbose_name_plural': 'Модели',
            },
        ),
        migrations.CreateModel(
            name='Configuration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название конфигурации')),
                ('additional_options', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.additionaloptions', verbose_name='Дополнительные опции')),
                ('comfort', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.comfort', verbose_name='Комфорт')),
                ('multimedia_connectivity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.multimediaconnectivity', verbose_name='Мультимедиа')),
                ('safety_features', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.safetyfeatures', verbose_name='Безопасность')),
                ('suspension_brakes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.suspensionbrakes', verbose_name='Подвеска и тормоза')),
                ('technical_specs', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.technicalspecs', verbose_name='Технические характеристики')),
                ('transmission_drive', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.transmissiondrive', verbose_name='Трансмиссия')),
            ],
            options={
                'verbose_name': 'Конфигурация',
                'verbose_name_plural': 'Конфигурации',
            },
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(max_length=50, verbose_name='Цвет')),
                ('wheel_size', models.DecimalField(decimal_places=1, max_digits=3, verbose_name='Размер колес')),
                ('led_headlights', models.BooleanField(verbose_name='LED фары')),
                ('fog_lights', models.BooleanField(verbose_name='Противотуманные фары')),
                ('tinted_windows', models.BooleanField(verbose_name='Тонированные стекла')),
                ('roof_rails', models.BooleanField(verbose_name='Рейлинги на крыше')),
                ('image', models.ImageField(blank=True, null=True, upload_to='car_images/', verbose_name='Изображение общее')),
                ('image_front', models.ImageField(blank=True, null=True, upload_to='car_images/', verbose_name='Изображение спереди')),
                ('image_side', models.ImageField(blank=True, null=True, upload_to='car_images/', verbose_name='Изображение сбоку')),
                ('image_back', models.ImageField(blank=True, null=True, upload_to='car_images/', verbose_name='Изображение сзади')),
                ('image_interior', models.ImageField(blank=True, null=True, upload_to='car_images/', verbose_name='Изображение внутри')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.carmodel', verbose_name='Модель автомобиля')),
                ('configuration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.configuration', verbose_name='Конфигурация')),
            ],
            options={
                'verbose_name': 'Автомобиль',
                'verbose_name_plural': 'Автомобили',
            },
        ),
        migrations.CreateModel(
            name='Showroom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Наименование автосалона')),
                ('address', models.CharField(max_length=50, verbose_name='адрес')),
                ('contact', models.CharField(max_length=15, verbose_name='Контакт автосалона')),
                ('dealer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.dealer', verbose_name='Диллер')),
            ],
            options={
                'verbose_name': 'Автосалон',
                'verbose_name_plural': 'Австосалоны',
            },
        ),
        migrations.CreateModel(
            name='CarInShowroom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(verbose_name='Количество в наличии')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.car', verbose_name='Автомобиль')),
                ('showroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.showroom', verbose_name='Автосалон')),
            ],
            options={
                'verbose_name': 'Машины в наличии',
            },
        ),
    ]
